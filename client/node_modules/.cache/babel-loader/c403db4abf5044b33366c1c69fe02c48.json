{"ast":null,"code":"var _jsxFileName = \"/Users/algolix/projects/node-react-challenge/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport ProgressBar from \"./components/ProgressBar\";\nimport \"./App.css\";\nimport { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { actionCreators } from \"./store\";\nimport { signup as signupAPI } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    signedUp\n  } = bindActionCreators(actionCreators, dispatch);\n  const [signUp, setSignUp] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const handleChange = async () => {\n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n    const {\n      name,\n      email,\n      password,\n      confirmPassword\n    } = signUp;\n\n    if (name && email && password && confirmPassword) {\n      if (!pattern.test(email)) {\n        alert(\"Please enter valid email address.\");\n        return;\n      }\n\n      if (password !== confirmPassword) {\n        alert(\"password and confirm password does not match\");\n        return;\n      }\n\n      const payload = {\n        firstName: name,\n        email,\n        password\n      };\n      const response = await signupAPI(payload);\n\n      if (response) {\n        setSignUp({\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\"\n        });\n        signedUp(response);\n        alert(\"data added successfully\");\n      } else {\n        alert(\"something went wrong\");\n      }\n    } else {\n      alert(\"Please fill all fields\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n      signUp: signUp,\n      setSignUp: setSignUp,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eC/RHsmYpzfqH7s+jwwn7SIeRcE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/algolix/projects/node-react-challenge/client/src/App.tsx"],"names":["React","useState","Fragment","ProgressBar","useDispatch","bindActionCreators","actionCreators","signup","signupAPI","App","dispatch","signedUp","signUp","setSignUp","name","email","password","confirmPassword","handleChange","pattern","RegExp","test","alert","payload","firstName","response"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,WAAP;AACA,SAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,SAASC,MAAM,IAAIC,SAAnB,QAAoC,gBAApC;;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAeN,kBAAkB,CAACC,cAAD,EAAiBI,QAAjB,CAAvC;AAEA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC;AACnCa,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAE,EAHyB;AAInCC,IAAAA,eAAe,EAAE;AAJkB,GAAD,CAApC;;AAOA,QAAMC,YAAY,GAAG,YAAY;AAC/B,QAAIC,OAAO,GAAG,IAAIC,MAAJ,CAAW,iSAAX,CAAd;AACA,UAAM;AACJN,MAAAA,IADI;AAEJC,MAAAA,KAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA;AAJI,QAKFL,MALJ;;AAOA,QAAIE,IAAI,IAAIC,KAAR,IAAiBC,QAAjB,IAA6BC,eAAjC,EAAkD;AAChD,UAAI,CAACE,OAAO,CAACE,IAAR,CAAaN,KAAb,CAAL,EAA0B;AACxBO,QAAAA,KAAK,CAAC,mCAAD,CAAL;AACA;AACD;;AAED,UAAIN,QAAQ,KAAKC,eAAjB,EAAkC;AAChCK,QAAAA,KAAK,CAAC,8CAAD,CAAL;AACA;AACD;;AAED,YAAMC,OAAO,GAAG;AACdC,QAAAA,SAAS,EAAEV,IADG;AAEdC,QAAAA,KAFc;AAGdC,QAAAA;AAHc,OAAhB;AAMA,YAAMS,QAAQ,GAAG,MAAMjB,SAAS,CAACe,OAAD,CAAhC;;AACA,UAAIE,QAAJ,EAAc;AACZZ,QAAAA,SAAS,CAAC;AACRC,UAAAA,IAAI,EAAE,EADE;AAERC,UAAAA,KAAK,EAAE,EAFC;AAGRC,UAAAA,QAAQ,EAAE,EAHF;AAIRC,UAAAA,eAAe,EAAE;AAJT,SAAD,CAAT;AAMAN,QAAAA,QAAQ,CAACc,QAAD,CAAR;AACAH,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACD,OATD,MASO;AACLA,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,KA9BD,MA8BO;AACLA,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACD;AACF,GA1CD;;AA4CA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,WAAD;AACE,MAAA,MAAM,EAAEV,MADV;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,YAAY,EAAEK;AAHhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAhED;;GAAMT,G;UACaL,W;;;KADbK,G;AAkEN,eAAeA,GAAf","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport ProgressBar from \"./components/ProgressBar\";\n\nimport \"./App.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"./store/reducers\";\nimport { bindActionCreators } from \"redux\";\nimport { actionCreators } from \"./store\";\nimport { signup as signupAPI } from './services/api';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const { signedUp } = bindActionCreators(actionCreators, dispatch);\n\n  const [signUp, setSignUp] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const handleChange = async () => {\n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n    const {\n      name,\n      email,\n      password,\n      confirmPassword\n    } = signUp;\n\n    if (name && email && password && confirmPassword) {\n      if (!pattern.test(email)) {\n        alert(\"Please enter valid email address.\");\n        return;\n      }\n\n      if (password !== confirmPassword) {\n        alert(\"password and confirm password does not match\");\n        return;\n      }\n\n      const payload = {\n        firstName: name,\n        email,\n        password\n      }\n  \n      const response = await signupAPI(payload);\n      if (response) {\n        setSignUp({\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n        });\n        signedUp(response);\n        alert(\"data added successfully\")\n      } else {\n        alert(\"something went wrong\")\n      }\n    } else {\n      alert(\"Please fill all fields\");\n    }\n  };\n\n  return (\n    <Fragment>\n      <ProgressBar\n        signUp={signUp}\n        setSignUp={setSignUp}\n        handleChange={handleChange}\n      />\n    </Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}